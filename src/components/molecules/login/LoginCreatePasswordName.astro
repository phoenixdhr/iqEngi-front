---
/* Si estás usando Astro, aquí podrías importar algo si fuera necesario,
   por ejemplo variables de entorno o configuración del sitio.
   En caso contrario, puedes omitir esta sección. */
---

<!-- Modal para "Crear una contraseña" --><!-- Título e indicación -->
<div id="div-create-password" class="text-center">
    <h2 class="text-xl font-semibold mb-1">Finalmente, ¿cómo te llamas?</h2>

    <p class="text-base text-gray-500 mb-4">
        Asegúrate de escribirlo como debe aparecer en tus certificados.
    </p>
</div>

<!-- Formulario para ingresar y confirmar contraseña -->
<div
    id="createPasswordNameForm"
    class="relative flex flex-col justify-center mt-7"
>
    <form class="space-y-6" id="loginPasswordNameForm">
        <input
            id="firstNameInput"
            type="text"
            placeholder="Nombres"
            onblur="this.value = this.value.trim()"
            required
            class="w-full h-12 px-4 bg-white border border-gray-300 focus:outline-none focus:ring-2 focus:ring-green-400 rounded-full text-gray-900 text-center placeholder:text-center"
        />

        <input
            id="lastNameInput"
            type="text"
            placeholder="Apellidos"
            onblur="this.value = this.value.trim()"
            required
            class="w-full h-12 px-4 bg-white border border-gray-300 focus:outline-none focus:ring-2 focus:ring-green-400 rounded-full text-gray-900 text-center placeholder:text-center"
        />

        <button
            id="btnCrearCuenta"
            disabled
            type="submit"
            class="w-full h-12 text-white bg-gradient-to-br from-purple-600 to-blue-500 hover:bg-gradient-to-bl focus:ring-4 font-medium text-base rounded-full opacity-50 cursor-not-allowed"
        >
            Crear Cuenta
        </button>
    </form>
</div>

<!-- Listener para mostrar el modal cuando se dispare el evento "open-login-password-modal" -->

<script>
    import { clientGql } from '@graphql-astro/apolloClient.ts';
    import {
        SignupDocument,
        type Usuario,
    } from '@graphql-astro/generated/graphql';

    import { showElement, hideElement } from '@services/closeOpenLogin';

    const emailInput = document.getElementById(
        'emailInput',
    ) as HTMLInputElement;

    // Aquí puedes agregar cualquier script adicional que necesites
    // Por ejemplo, para manejar el envío del formulario o la validación de campos
    const loginPasswordNameForm = document.getElementById(
        'loginPasswordNameForm',
    ) as HTMLFormElement;

    const passwordInput = document.getElementById(
        'passwordInput',
    ) as HTMLInputElement;
    const confirmPasswordInput = document.getElementById(
        'confirmPasswordInput',
    ) as HTMLInputElement;

    const firstNameInput = document.getElementById(
        'firstNameInput',
    ) as HTMLInputElement;
    const lastNameInput = document.getElementById(
        'lastNameInput',
    ) as HTMLInputElement;

    const btnCrearCuenta = document.getElementById(
        'btnCrearCuenta',
    ) as HTMLButtonElement;

    let isValid = true;

    // Función que actualiza el estado del botón según el contenido de los campos
    function updateButtonState() {
        const firstNameValue = firstNameInput.value.trim();
        const lastNameValue = lastNameInput.value.trim();
        const isValid = firstNameValue !== '' && lastNameValue !== '';

        btnCrearCuenta.disabled = !isValid;

        if (isValid) {
            btnCrearCuenta.classList.remove('opacity-50', 'cursor-not-allowed');
            btnCrearCuenta.classList.add('cursor-pointer');
            btnCrearCuenta.classList.toggle('hover:scale-105', isValid);
            btnCrearCuenta.classList.toggle('transition-transform', isValid);
        } else {
            btnCrearCuenta.classList.add('opacity-50', 'cursor-not-allowed');
            btnCrearCuenta.classList.remove('cursor-pointer');
        }
    }

    // Ejecutar al cargar la página
    document.addEventListener('DOMContentLoaded', updateButtonState);

    // Listener para actualizar el estado del botón al ingresar texto
    loginPasswordNameForm.addEventListener('input', updateButtonState);

    loginPasswordNameForm.addEventListener('submit', async function (event) {
        event.preventDefault();
        const password = passwordInput.value.trim();
        const confirmPassword = confirmPasswordInput.value.trim();
        const firstName = firstNameInput.value.trim();
        const lastName = lastNameInput.value.trim();

        const email = emailInput.value.trim();
        try {
            if (password && confirmPassword && password === confirmPassword) {
                const { data } = await clientGql.mutate({
                    mutation: SignupDocument,
                    variables: {
                        createUsuarioInput: {
                            email: email,
                            password: password,
                            firstName: firstName,
                            lastName: lastName,
                        },
                    },
                });

                const usuario: Usuario = data.signup;
                passwordInput.value = '';
                confirmPasswordInput.value = '';
                firstNameInput.value = '';
                lastNameInput.value = '';
                btnCrearCuenta.classList.add(
                    'opacity-50',
                    'cursor-not-allowed',
                );

                //// CODIGO DE BIENVENIDA
                hideElement('loginCreatePasswordNameDiv');
                hideElement('btnBack');
                showElement('bienvenidaDiv');

                const firstNameWelcomeSpan = document.getElementById(
                    'firstNameWelcomeSpan',
                ) as HTMLSpanElement;
                firstNameWelcomeSpan.textContent =
                    usuario.firstName.split(' ')[0];

                // Aquí puedes agregar la lógica para redirigir al usuario a la página principal o a donde desees
                // window.location.href = '/';
            } else {
                return;
            }
        } catch (error) {
            console.error('Error al crear la contraseña:', error);
        }
    });
</script>
