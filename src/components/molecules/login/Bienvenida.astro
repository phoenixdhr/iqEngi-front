---
/* Si estás usando Astro, aquí podrías importar algo si fuera necesario,
   por ejemplo variables de entorno o configuración del sitio.
   En caso contrario, puedes omitir esta sección. */
---

<!-- Modal para "Crear una contraseña" --><!-- Título e indicación -->
<div id="div-create-password" class="text-center">
    <h2 class="text-xl font-semibold mb-1">
        ¡Excelente, hector! Tu cuenta fue creada con éxito
    </h2>

    <p class="text-sm text-gray-500 mb-4">
        Gracias por ser parte de la comunidad de aprendizaje más grande en
        Latinoamérica.
    </p>
</div>

<!-- Formulario para ingresar y confirmar contraseña -->
<div
    id="createPasswordNameForm"
    class="relative flex flex-col justify-center mt-7"
>
    <form class="space-y-6" id="loginPasswordNameForm">
        <button
            type="submit"
            class="w-full h-12 text-white bg-gradient-to-br from-purple-600 to-blue-500 hover:bg-gradient-to-bl focus:ring-4 font-medium text-sm hover:scale-105 transition-transform rounded-full"
        >
            Comenzar
        </button>
    </form>
</div>

<!-- Listener para mostrar el modal cuando se dispare el evento "open-login-password-modal" -->

<script>
    import { clientGql } from '@graphql-astro/apolloClient.ts';
    import {
        SignupDocument,
        type Usuario,
    } from '@graphql-astro/generated/graphql';

    const emailInput = document.getElementById(
        'emailInput',
    ) as HTMLInputElement;

    // Aquí puedes agregar cualquier script adicional que necesites
    // Por ejemplo, para manejar el envío del formulario o la validación de campos
    const createPasswordNameForm = document.getElementById(
        'createPasswordNameForm',
    ) as HTMLFormElement;

    const passwordInput = document.getElementById(
        'passwordInput',
    ) as HTMLInputElement;
    const confirmPasswordInput = document.getElementById(
        'confirmPasswordInput',
    ) as HTMLInputElement;

    const errorMessage = document.getElementById(
        'error-message',
    ) as HTMLParagraphElement;

    const firstNameInput = document.getElementById(
        'firstNameInput',
    ) as HTMLInputElement;
    const lastNameInput = document.getElementById(
        'lastNameInput',
    ) as HTMLInputElement;

    function checkPasswords() {
        const password = passwordInput.value;
        const confirmPassword = confirmPasswordInput.value;

        console.log('password: ', password);
        console.log('confirmPassword: ', confirmPassword);

        const min =
            password.length >= confirmPassword.length
                ? confirmPassword.length
                : password.length;

        if (
            password &&
            confirmPassword &&
            password.slice(0, min) !== confirmPassword.slice(0, min)
            // password.length === confirmPassword.length &&
            // password !== confirmPassword
        ) {
            errorMessage.classList.remove('hidden');
        } else {
            errorMessage.classList.add('hidden');
        }
    }

    passwordInput.addEventListener('input', checkPasswords);
    confirmPasswordInput.addEventListener('input', checkPasswords);

    createPasswordNameForm.addEventListener('submit', async function (event) {
        event.preventDefault();
        const password = passwordInput.value;
        const confirmPassword = confirmPasswordInput.value;
        const firstName = firstNameInput.value;
        const lastName = lastNameInput.value;

        console.log('password: ', password);

        console.log('confirmPassword: ', confirmPassword);

        if (password && confirmPassword && password !== confirmPassword) {
            errorMessage.classList.remove('hidden');
        } else {
            errorMessage.classList.add('hidden');
        }
        const spanEmail = document.getElementById('spanEmail');
        const email = emailInput.value;
        try {
            const { data } = await clientGql.mutate({
                mutation: SignupDocument,
                variables: {
                    createUsuarioInput: {
                        email: email,
                        password: password,
                        firstName: firstName,
                        lastName: lastName,
                    },
                },
            });

            const usuario: Usuario = data.signup;
            passwordInput.value = '';
            confirmPasswordInput.value = '';
            firstNameInput.value = '';
            lastNameInput.value = '';
            ////AÑADIR CODIGO DE BIENVENIDA
        } catch (error) {
            console.error('Error al crear la contraseña:', error);
        }
    });
</script>
