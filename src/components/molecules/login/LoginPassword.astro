---
/* Si estás usando Astro, aquí podrías importar algo si fuera necesario,
   por ejemplo variables de entorno o configuración del sitio.
   En caso contrario, puedes omitir esta sección. */
---

<!-- Modal para "Crear una contraseña" --><!-- Título e indicación -->
<h2 class="text-xl font-semibold mb-1 text-center">Ingresa tu contraseña</h2>

<!-- Formulario para ingresar y confirmar contraseña -->
<div id="astro-login-form" class="relative flex flex-col justify-center mt-7">
    <form class="space-y-6" id="loginUserPasswordForm">
        <input
            id="passwordLoginInput"
            type="password"
            placeholder="Contraseña"
            required
            class="w-full h-12 px-4 bg-white border border-gray-300 focus:outline-none focus:ring-2 focus:ring-green-400 rounded-full text-gray-900 text-center placeholder:text-center"
        />

        <button
            type="submit"
            class="w-full h-12 text-white bg-gradient-to-br from-purple-600 to-blue-500 hover:bg-gradient-to-bl focus:ring-4 font-medium text-sm hover:scale-105 transition-transform rounded-full"
        >
            Continuar
        </button>
    </form>
</div>

<!-- Aviso de términos y políticas -->
<p class="text-xs text-gray-500 text-center mt-6">
    <a
        id="btnForgotPassword"
        class="text-purple-dark-400 underline hover:text-purple-dark-400 hover:underline cursor-pointer"
        >¿Olvidaste tu contraseña?</a
    >
</p>

<!-- Listener para mostrar el modal cuando se dispare el evento "open-login-password-modal" -->
<script>
    import { clientGql } from '@graphql-astro/apolloClient.ts';
    import {
        LoginDocument,
        SignupDocument,
        type Usuario,
    } from '@graphql-astro/generated/graphql';

    document.addEventListener('DOMContentLoaded', () => {
        const btnForgotPassword = document.getElementById(
            'btnForgotPassword',
        ) as HTMLButtonElement;
        btnForgotPassword &&
            btnForgotPassword.addEventListener('click', async () => {
                const loginPassword = document.getElementById(
                    'login-password-modal',
                );

                const forgotPassword = document.getElementById(
                    'forgot-password-modal',
                );

                // Oculta el modal de Google si está visible

                if (loginPassword) loginPassword.classList.add('hidden');

                if (forgotPassword) forgotPassword.classList.remove('hidden');
            });
    });

    document.addEventListener('DOMContentLoaded', () => {
        const loginUserPasswordForm = document.getElementById(
            'loginUserPasswordForm',
        ) as HTMLFormElement;

        loginUserPasswordForm &&
            loginUserPasswordForm.addEventListener('submit', async () => {
                const passwordLoginInput = document.getElementById(
                    'passwordLoginInput',
                ) as HTMLInputElement;
                const passwordLogin = passwordLoginInput.value;

                const emailInput = document.getElementById(
                    'emailInput',
                ) as HTMLInputElement;

                const email = emailInput?.textContent || emailInput.value;

                try {
                    const { data } = await clientGql.mutate({
                        mutation: LoginDocument,
                        variables: {
                            loginUserInput: {
                                email: email,
                                password: passwordLogin,
                            },
                        },
                    });

                    const usuario: Usuario = data;
                } catch (error) {
                    console.error('Error al iniciar sesión:', error);

                    // Aquí puedes manejar el error, por ejemplo, mostrar un mensaje al usuario
                }
            });
    });
</script>
