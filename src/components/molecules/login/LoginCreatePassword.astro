<!-- <createPassword>> --><!-- Modal para "Crear una contraseña" -->
<div id="div-create-password" class="text-center">
    <h2 class="text-xl font-semibold mb-1">
        Crea una contraseña e ingresa con el correo <span id="spanEmail"></span>
    </h2>
    <p class="text-sm text-gray-500 mb-4">Debe tener al menos 6 caracteres</p>
</div>

<!-- Formulario para ingresar y confirmar contraseña -->
<form class="space-y-6" id="createPasswordForm">
    <input
        id="passwordInput"
        type="password"
        placeholder="Contraseña"
        required
        class="w-full h-12 px-4 bg-white border border-gray-300 focus:outline-none focus:ring-2 focus:ring-green-400 rounded-full text-gray-900 text-center placeholder:text-center"
    />
    <input
        id="confirmPasswordInput"
        type="password"
        placeholder="Confirmar contraseña"
        required
        class="w-full h-12 px-4 bg-white border border-gray-300 focus:outline-none focus:ring-2 focus:ring-green-400 rounded-full text-gray-900 text-center placeholder:text-center"
    />

    <button
        id="btnCheckPassword"
        disabled
        type="submit"
        class="w-full h-12 text-white bg-gradient-to-br from-purple-600 to-blue-500 hover:bg-gradient-to-bl focus:ring-4 font-medium text-sm hover:scale-105 transition-transform rounded-full opacity-50 cursor-not-allowed"
    >
        Continuar
    </button>
</form>

<!-- Mensaje de error -->
<p id="error-message" class="text-red-500 mt-2 hidden"></p>

<div class="h-8"></div>

<!-- Aviso de términos y políticas -->
<p class="text-xs text-gray-500 text-center mt-6">
    Al crear una cuenta en IqEngi, aceptas los
    <a href="#" class="text-purple-dark-400 underline">Términos de Servicio</a>
    y
    <a href="#" class="text-purple-dark-400 underline"
        >Políticas de Privacidad</a
    >.
</p>

<script>
    // Referencias a los elementos
    const createPasswordForm = document.getElementById('createPasswordForm');
    const passwordInput = document.getElementById('passwordInput');
    const confirmPasswordInput = document.getElementById(
        'confirmPasswordInput',
    );
    const errorMessage = document.getElementById('error-message');
    const btnCheckPassword = document.getElementById('btnCheckPassword');

    /**
     * Función que valida que:
     *  - Ambos campos estén llenos.
     *  - La contraseña tenga al menos 6 caracteres.
     *  - Las contraseñas coincidan.
     * Dependiendo de la validación, se habilita o deshabilita el botón
     * y se muestra el mensaje de error correspondiente.
     */
    function checkPasswords() {
        const password = passwordInput.value;
        const confirmPassword = confirmPasswordInput.value;

        let isValid = true;
        let errorText = '';

        // Verificar que ambos campos estén llenos.
        if (password === '' || confirmPassword === '') {
            isValid = false;
        }

        // Verificar que la contraseña tenga al menos 6 caracteres.
        if (password && password.length < 6) {
            isValid = false;
            errorText = 'La contraseña debe tener al menos 6 caracteres.';
        }

        // Verificar que las contraseñas coincidan.
        if (password && confirmPassword && password !== confirmPassword) {
            isValid = false;
            errorText = 'Las contraseñas no coinciden.';
        }

        // Actualiza la visualización del mensaje de error.
        if (!isValid && errorText !== '') {
            errorMessage.textContent = errorText;
            errorMessage.classList.remove('hidden');
        } else {
            errorMessage.textContent = '';
            errorMessage.classList.add('hidden');
        }

        // Actualiza el estado y los estilos del botón.
        btnCheckPassword.disabled = !isValid;
        btnCheckPassword.classList.toggle('opacity-50', !isValid);
        btnCheckPassword.classList.toggle('cursor-not-allowed', !isValid);
        btnCheckPassword.classList.toggle('cursor-pointer', isValid);
    }

    // Agregar los escuchadores a los inputs para validar en tiempo real.
    passwordInput.addEventListener('input', checkPasswords);
    confirmPasswordInput.addEventListener('input', checkPasswords);

    // Manejador para el evento submit del formulario.
    createPasswordForm.addEventListener('submit', (event) => {
        event.preventDefault();
        console.log('Formulario enviado');
        const password = passwordInput.value;
        const confirmPassword = confirmPasswordInput.value;

        // Última verificación antes de proceder.
        if (password.length < 6 || password !== confirmPassword) {
            checkPasswords();
            return;
        }

        // Oculta la sección actual y muestra la siguiente (si existen en el DOM).
        const loginCreatePasswordDiv = document.getElementById(
            'loginCreatePasswordDiv',
        ) as HTMLDivElement;
        loginCreatePasswordDiv &&
            loginCreatePasswordDiv.classList.add('hidden');

        const loginCreatePasswordNameDiv = document.getElementById(
            'loginCreatePasswordNameDiv',
        ) as HTMLDivElement;
        loginCreatePasswordNameDiv &&
            loginCreatePasswordNameDiv.classList.remove('hidden');

        // Aquí puedes agregar la lógica adicional para el envío del formulario.
    });
</script>
