---
/**
 * NavbarUser.astro
 * Componente de barra de navegación para usuarios autenticados
 */

// Elementos del menú principal para usuarios autenticados
const mainMenuItems = [
    { name: 'Inicio', href: '/usuario' },
    { name: 'Mis Cursos', href: '/usuario/mis-cursos' },
    { name: 'Certificados y Progreso', href: '/usuario/certificados-progreso' },
    { name: 'Perfil', href: '/usuario/perfil' },
    { name: 'Favoritos', href: '/usuario/favoritos' },
    { name: 'Compras', href: '/usuario/compras' },
];

// Obtener la URL actual para resaltar el elemento activo
const currentUrl = Astro.url.pathname;
---

<header class="sticky top-0 z-40" style="background-color: var(--color-bg);">
    <nav
        aria-label="Global"
        class="mx-auto flex max-w-7xl items-center justify-between p-6 lg:px-8"
    >
        <!-- Logo y nombre de marca -->
        <div class="flex items-center lg:flex-1">
            <a href="/dashboard" class="flex items-center space-x-2">
                <img
                    class="h-8 lg:h-10 w-auto"
                    src="/favicon.svg"
                    alt="IqEngi"
                />
                <span
                    class="bg-clip-text text-transparent font-bold text-2xl lg:text-3xl"
                    style="background: var(--gradient-button-primary); -webkit-background-clip: text;"
                >
                    IQ-ENGI
                </span>
            </a>
        </div>

        <!-- Botón menú móvil -->
        <div id="mobile-menu-sandwich-button" class="flex lg:hidden h-8">
            <button
                type="button"
                id="mobile-menu-button"
                class="-m-2.5 inline-flex items-center justify-center rounded-md p-2.5 hover:scale-105 transition-transform"
                style="color: var(--color-text-muted);"
            >
                <span class="sr-only">Abrir menú principal</span>
                <!-- Ícono de menú simple sin usar heroicons -->
                <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                    fill="none"
                    stroke="currentColor"
                    stroke-width="2"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    class="h-6 w-6"
                >
                    <line x1="3" y1="6" x2="21" y2="6"></line>
                    <line x1="3" y1="12" x2="21" y2="12"></line>
                    <line x1="3" y1="18" x2="21" y2="18"></line>
                </svg>
            </button>
        </div>

        <!-- Menú de navegación para pantallas grandes -->
        <div class="hidden lg:flex lg:gap-x-12">
            {
                mainMenuItems.map((item) => (
                    <div>
                        <a
                            href={item.href}
                            class="text-base font-semibold"
                            style="color: var(--color-text);"
                        >
                            {item.name}
                        </a>
                        {currentUrl === item.href ? (
                            <div
                                class="border-b-2 transition-all duration-300"
                                style="border-color: var(--color-text);"
                            />
                        ) : (
                            <div />
                        )}
                    </div>
                ))
            }
        </div>

        <!-- Botón cerrar sesión para pantallas grandes -->
        <div class="hidden lg:flex lg:flex-1 lg:justify-end items-center">
            <button
                type="button"
                id="logout-button"
                class="btn btn-primary font-medium text-base mr-2 transition-transform hover:scale-105"
            >
                Cerrar sesión
            </button>
        </div>
    </nav>

    <!-- Menú móvil -->
    <div id="mobile-menu" class="lg:hidden hidden fixed inset-0 z-50">
        <div class="fixed inset-0 bg-black/20"></div>
        <div
            class="fixed inset-y-0 right-0 z-50 w-full overflow-y-auto px-6 py-6 sm:max-w-sm sm:ring-1 sm:ring-gray-900/10"
            style="background-color: var(--color-bg);"
        >
            <!-- Encabezado del menú móvil -->
            <div class="flex items-center justify-between px-2.5">
                <a
                    href="/dashboard"
                    class="-m-2.5 inline-flex items-center justify-center rounded-md space-x-2"
                >
                    <span class="sr-only">IQ-ENGI</span>
                    <img
                        class="h-8 lg:h-10 w-auto"
                        src="/favicon.svg"
                        alt="IqEngi"
                    />
                    <span
                        class="bg-clip-text text-transparent font-bold text-2xl lg:text-3xl"
                        style="background: var(--gradient-button-primary); -webkit-background-clip: text;"
                    >
                        IQ-ENGI
                    </span>
                </a>

                <!-- Botón cerrar sesión versión móvil -->
                <button
                    type="button"
                    id="mobile-logout-button"
                    class="btn btn-primary btn-sm ml-auto mr-4 hover:scale-105 transition-transform"
                >
                    Salir
                </button>

                <button
                    type="button"
                    id="close-mobile-menu"
                    class="-m-2.5 inline-flex items-center justify-center rounded-md p-2.5 hover:scale-105 transition-transform"
                    style="color: var(--color-text-muted);"
                >
                    <span class="sr-only">Cerrar menú</span>
                    <!-- Ícono X simple sin usar heroicons -->
                    <svg
                        xmlns="http://www.w3.org/2000/svg"
                        width="24"
                        height="24"
                        viewBox="0 0 24 24"
                        fill="none"
                        stroke="currentColor"
                        stroke-width="2"
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        class="h-6 w-6"
                    >
                        <line x1="18" y1="6" x2="6" y2="18"></line>
                        <line x1="6" y1="6" x2="18" y2="18"></line>
                    </svg>
                </button>
            </div>

            <!-- Elementos de navegación móvil -->
            <div class="mt-6 flow-root">
                <div class="-my-6 divide-y divide-gray-500/10">
                    <div class="space-y-2 py-6">
                        {
                            mainMenuItems.map((item) => (
                                <a
                                    href={item.href}
                                    class="-mx-3 block rounded-lg px-3 py-2 text-base font-semibold hover:opacity-80 transition-opacity"
                                    style="color: var(--color-text);"
                                >
                                    {item.name}
                                </a>
                            ))
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</header>
<script>
    document.addEventListener('DOMContentLoaded', () => {
        const menuMobile = document.getElementById('mobile-menu');
        const sandwichButton = document.getElementById('mobile-menu-button');
        const closeButton = document.getElementById('close-mobile-menu');

        // Función directa sin closure para evitar problemas de referencia
        function handleMenuToggle() {
            if (menuMobile) {
                menuMobile.classList.toggle('hidden');
            }
        }

        // Eliminar eventos anteriores para evitar duplicación
        // sandwichButton?.removeEventListener('click', handleMenuToggle);
        // closeButton?.removeEventListener('click', handleMenuToggle);

        // Asignar eventos nuevos
        sandwichButton?.addEventListener('click', handleMenuToggle);
        closeButton?.addEventListener('click', handleMenuToggle);
    });
</script>
