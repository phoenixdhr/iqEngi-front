---
import LayoutIn from '@layouts/LayoutIn.astro';

const token = Astro.url.searchParams.get('token');
---

<LayoutIn tituloPagina="Restablecer Contraseña">
    <div class="bg-gray-200">
        <reset-password-div
            data-token={token}
            class="min-h-screen flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8"
        >
            <div
                class="text-gray-900 p-8 rounded-3xl w-11/12 max-w-md flex flex-col"
            >
                <!-- Logo de IQ-ENGI -->
                <div class="h-12"></div>
                <div class="absolute left-1/2 transform -translate-x-1/2">
                    <div class="flex items-center space-x-2">
                        <img
                            class="h-8 lg:h-10 w-auto"
                            src="/favicon.svg"
                            alt="IqEngi"
                        />
                        <span
                            class="bg-gradient-to-br from-purple-600 to-blue-500 bg-clip-text text-transparent font-bold text-2xl lg:text-3xl"
                        >
                            IQ-ENGI
                        </span>
                    </div>
                </div>
                <div class="h-10"></div>

                ```
                <div id="div-reset-password" class="text-center">
                    <h2 class="text-lg mb-1">Restablece tu contraseña</h2>
                    <p class="text-base text-gray-500 mb-4 mt-4">
                        Debe tener al menos 6 caracteres
                    </p>
                </div>

                <form id="reset-password-form" class="space-y-6">
                    <input
                        id="passwordReset"
                        name="passwordReset"
                        type="password"
                        placeholder="Nueva Contraseña"
                        onblur="this.value = this.value.trim()"
                        required
                        class="w-full h-12 px-4 bg-white border border-gray-300 focus:outline-none focus:ring-2 focus:ring-green-400 rounded-full text-gray-900 text-center placeholder:text-center"
                    />
                    <input
                        id="confirmPasswordReset"
                        name="confirmPasswordReset"
                        type="password"
                        placeholder="Confirmar Contraseña"
                        onblur="this.value = this.value.trim()"
                        required
                        class="w-full h-12 px-4 bg-white border border-gray-300 focus:outline-none focus:ring-2 focus:ring-green-400 rounded-full text-gray-900 text-center placeholder:text-center"
                    />

                    <button
                        id="btnResetPassword"
                        disabled
                        type="submit"
                        class="w-full h-12 text-white bg-gradient-to-br from-purple-600 to-blue-500 hover:bg-gradient-to-bl focus:ring-4 font-medium text-base rounded-full opacity-50 cursor-not-allowed"
                    >
                        Restablecer Contraseña
                    </button>
                </form>

                <!-- Mensaje de error -->
                <p class="mt-2 text-transparent text-center">
                    *<span
                        id="errorMessagePassword"
                        class="text-red-700 mt-2 hidden text-center"></span>
                </p>
            </div>
        </reset-password-div>
        ```
    </div>

    <script>
        import { clientGql } from '@graphql-astro/apolloClient';
        import { Jwt_ResetPasswordDocument } from '@graphql-astro/generated/graphql';

        const resetPasswordForm = document.getElementById(
            'reset-password-form',
        );

        const passwordReset = document.getElementById(
            'passwordReset',
        ) as HTMLInputElement;
        const confirmPasswordReset = document.getElementById(
            'confirmPasswordReset',
        ) as HTMLInputElement;

        const errorMessagePassword = document.getElementById(
            'errorMessagePassword',
        ) as HTMLParagraphElement;

        const btnResetPassword = document.getElementById(
            'btnResetPassword',
        ) as HTMLButtonElement;

        function checkPasswords() {
            const password = passwordReset.value.trim();
            const confirmPassword = confirmPasswordReset.value.trim();

            let isValid = true;
            let errorText = '';

            if (password === '' || confirmPassword === '') {
                isValid = false;
            }

            if (password && password.length < 6) {
                isValid = false;
                errorText = 'La contraseña debe tener al menos 6 caracteres.';
            }

            if (password && confirmPassword && password !== confirmPassword) {
                isValid = false;
                errorText = 'Las contraseñas no coinciden.';
            }

            if (!isValid && errorText !== '') {
                errorMessagePassword.textContent = errorText;
                errorMessagePassword.classList.remove('hidden');
            } else {
                errorMessagePassword.textContent = '';
                errorMessagePassword.classList.add('hidden');
            }

            btnResetPassword.disabled = !isValid;
            btnResetPassword.classList.toggle('opacity-50', !isValid);
            btnResetPassword.classList.toggle('cursor-not-allowed', !isValid);
            btnResetPassword.classList.toggle('cursor-pointer', isValid);
            btnResetPassword.classList.toggle('hover:scale-105', isValid);
            btnResetPassword.classList.toggle('transition-transform', isValid);
        }

        passwordReset.addEventListener('input', checkPasswords);
        confirmPasswordReset.addEventListener('input', checkPasswords);

        class ResetPasswordDiv extends HTMLElement {
            connectedCallback() {
                const token = this.dataset.token;
                console.log('Token recibido:', token);
                console.log('Longitud del token:', token ? token.length : 0);

                resetPasswordForm?.addEventListener('submit', async (e) => {
                    e.preventDefault();
                    const form = e.target as HTMLFormElement;
                    const formData = new FormData(form);
                    const newPassword = formData.get('passwordReset') as string;
                    const confirmPassword = formData.get(
                        'confirmPasswordReset',
                    ) as string;

                    if (newPassword !== confirmPassword) {
                        alert('Las contraseñas no coinciden');
                        return;
                    }

                    try {
                        const { data } = await clientGql.mutate({
                            mutation: Jwt_ResetPasswordDocument,
                            variables: {
                                resetPasswordInput: {
                                    newPassword,
                                    token,
                                },
                            },
                        });

                        if (data?.resetPassword) {
                            alert('Contraseña actualizada exitosamente');
                            window.location.href = '/login';
                        }
                    } catch (error) {
                        console.error(
                            'Error al restablecer la contraseña:',
                            error,
                        );
                        alert('Error al restablecer la contraseña');
                    }
                });
            }
        }

        // Registrar el componente personalizado
        customElements.define('reset-password-div', ResetPasswordDiv);
    </script>

    "
</LayoutIn>
